{
  "version": 3,
  "sources": ["../node_modules/ms/index.js", "../node_modules/debug/src/debug.js", "../node_modules/debug/src/browser.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/electron-squirrel-startup/index.js", "../src_electron_main/index.ts"],
  "sourcesContent": ["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n", "/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n", "/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n", "/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n", "var path = require('path');\nvar spawn = require('child_process').spawn;\nvar debug = require('debug')('electron-squirrel-startup');\nvar app = require('electron').app;\n\nvar run = function(args, done) {\n  var updateExe = path.resolve(path.dirname(process.execPath), '..', 'Update.exe');\n  debug('Spawning `%s` with args `%s`', updateExe, args);\n  spawn(updateExe, args, {\n    detached: true\n  }).on('close', done);\n};\n\nvar check = function() {\n  if (process.platform === 'win32') {\n    var cmd = process.argv[1];\n    debug('processing squirrel command `%s`', cmd);\n    var target = path.basename(process.execPath);\n\n    if (cmd === '--squirrel-install' || cmd === '--squirrel-updated') {\n      run(['--createShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-uninstall') {\n      run(['--removeShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-obsolete') {\n      app.quit();\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = check();\n", "import { app, BrowserWindow } from \"electron\";\r\n//import * as path from \"path\";\r\n\r\nconst frontends = new Set<BrowserWindow>();\r\nconst version = require(\"../package.json\").version;\r\nif (require(\"electron-squirrel-startup\")) app.quit();\r\n\r\napp\r\n  .whenReady()\r\n  .then(() => {\r\n    const frontend = new BrowserWindow({\r\n      width: 1980,\r\n      height: 1080,\r\n      x: 0,\r\n      y: 0,\r\n      title: `Sample (${version}) - no project selected`,\r\n      webPreferences: {\r\n        nodeIntegration: false,\r\n        nodeIntegrationInWorker: false,\r\n        nodeIntegrationInSubFrames: false,\r\n        contextIsolation: true,\r\n        enableRemoteModule: false,\r\n      },\r\n    });\r\n\r\n    frontend.loadFile(\"../dist_client/index.html\");\r\n    frontend.setMenuBarVisibility(true);\r\n\r\n    frontend.webContents.openDevTools();\r\n\r\n    frontend.on(\"closed\", () => {\r\n      frontends.delete(frontend);\r\n      if (frontends.size === 0) {\r\n        app.quit();\r\n      }\r\n    });\r\n\r\n    frontends.add(frontend);\r\n\r\n    frontend.on(\"closed\", () => {\r\n      app.quit();\r\n    });\r\n  })\r\n  .catch((e) => {\r\n    console.log(\"what\", e);\r\n  });\r\n"],
  "mappings": "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",
  "names": []
}
